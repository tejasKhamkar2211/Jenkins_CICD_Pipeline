pipeline {
    agent any
    tools {
        nodejs "mynodejs"
    }
 
    stages {
        stage('git cloning') {
            steps {
                echo 'cloning files from github'
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/tejasKhamkar2211/docker-nodejsapp.git']])
                
            }
        }
        stage('Code Build') {
            steps {
                echo 'Building nodejs project'
                sh "npm install"
            }
        }
        stage('Code Test') {
            steps {
                echo 'Testing project'
                sh "./node_modules/mocha/bin/_mocha --exit ./test/test.js"
            }
        }
        stage('Container Build') {
            steps {
                echo 'Building container nodejs project'
                sh "docker build -t nodejs ."
                
            }
        }
         stage('docker container Test') {
            steps {
                echo 'Testing docker container'
                 sh '''
            # Stop and remove any existing container
            docker stop nodejslive || true
            docker rm nodejslive || true

            echo 'Running the container'
            # Run the container
            docker run -d -p 80:3000 --name nodejslive nodejs:latest

            echo "Monitoring 'nodejslive' for 30 seconds..."
            for i in {1..30}; do
                if docker ps --filter "name=nodejslive" --filter "status=running" | grep nodejslive > /dev/null; then
                    echo "[$i sec] Container is running"
                else
                    echo "[$i sec] Container is NOT running!"
                    exit 1  # Fail the build if the container stops
                fi
                sleep 1
            done
            echo "Monitoring complete!"
            '''
                
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying nodejs project on live server'
                sh '''
                        docker login -u ------------  -p -----------------------------
                        docker tag   nodejs:latest omkarkhamkar/docker_nodejs_pipeline
                        docker push omkarkhamkar/docker_nodejs_pipeline
                        echo "push completed"
                        exit
                        EOF
                    '''
                sshagent(['02312f7c-0000-4791-8b39-57682f49eaf6']) {
                // some block
                sh '''
                        ssh -o StrictHostKeyChecking=no ec2-user@----- << EOF
                        echo "Connected to Server"
                        sudo docker pull omkarkhamkar/docker_nodejs_pipeline:latest
                        sudo docker stop nodejslive || true
                        sudo docker rm nodejslive || true
                        docker run -d -p 80:3000 --name nodejslive omkarkhamkar/docker_nodejs_pipeline
                        exit
                        EOF
                    '''
                }
            }
        }
    }
}
